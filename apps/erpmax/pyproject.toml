[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "erpmax"
version = "1.0.0"
description = "Enhanced ERP solution built on ERPNext with modern features"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "GNU General Public License v3 (GPLv3)"}
authors = [
    {name = "ERPMAX Team", email = "info@erpmax.com"}
]
maintainers = [
    {name = "ERPMAX Team", email = "info@erpmax.com"}
]
keywords = ["erpnext", "erp", "business", "accounting", "inventory"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Framework :: ERPNext",
    "Topic :: Office/Business :: Financial :: Accounting",
    "Topic :: Office/Business :: Enterprise Resource Planning",
]
dependencies = [
    "frappe>=15.0.0",
    "erpnext>=15.0.0"
]

[project.urls]
Homepage = "https://github.com/yourusername/erpmax"
Documentation = "https://docs.erpmax.com"
Repository = "https://github.com/yourusername/erpmax.git"
"Bug Tracker" = "https://github.com/yourusername/erpmax/issues"
Changelog = "https://github.com/yourusername/erpmax/blob/main/CHANGELOG.md"

[project.optional-dependencies]
development = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.900",
    "pre-commit>=2.0"
]
testing = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "factory-boy>=3.0",
    "faker>=8.0"
]
production = [
    "gunicorn>=20.0",
    "supervisor>=4.0",
    "nginx>=1.18"
]

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["erpmax"]
include = ["erpmax*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
erpmax = [
    "**/*.html",
    "**/*.css",
    "**/*.js",
    "**/*.json",
    "**/*.svg",
    "**/*.png",
    "**/*.jpg",
    "**/*.ico",
    "**/*.md",
    "**/*.txt",
    "**/*.yml",
    "**/*.yaml"
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    "venv"
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m "not slow"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["erpmax"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/migrations/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\):",
    "@(abc\.)?abstractmethod",
]
